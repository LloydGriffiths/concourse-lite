#!/bin/bash

set -e -x

PROVIDER=${1}
shift

apt-get update

if ! [ -e /dev/vboxdrv ]; then
  # this won't exist in the container
  mknod -m 0600 /dev/vboxdrv c 10 57
fi

apt-get -y install wget

function install_virtualbox() {
  if which VBoxManage >/dev/null 2>&1 && \
      VBoxManage --version | grep 4.3.18 >/dev/null 2>&1; then
    return
  fi

  # for building vboxdrv
  apt-get -y install build-essential

  pushd /tmp
    wget http://download.virtualbox.org/virtualbox/4.3.18/virtualbox-4.3_4.3.18-96516~Ubuntu~raring_amd64.deb -O virtualbox.deb
    dpkg -i virtualbox.deb || apt-get -f -y install
    rm virtualbox.deb
  popd
}

function install_packer() {
  if [ -f "$1/packer" ]; then
    if $1/packer -v | grep v0.7.2; then
      return
    fi
  fi

  apt-get -y install unzip

  pushd $1
    wget https://dl.bintray.com/mitchellh/packer/packer_0.7.2_linux_amd64.zip -O packer.zip
    unzip -o packer.zip
    rm packer.zip
  popd
}

function install_packer_bosh() {
  apt-get -y install golang git mercurial >&2

  go get -d github.com/cppforlife/packer-bosh >&2
  go get github.com/tools/godep >&2

  pushd ${GOPATH}/src/github.com/cppforlife/packer-bosh >&2
    git submodule update --init --recursive >&2
    go get -v ./main/...
    godep go build -o out/packer-bosh ./main
    echo -n $(pwd)/out/packer-bosh
  popd >&2
}

lite_dir=$(cd $(dirname $0)/.. && pwd)

packer_bin_dir=${lite_dir}/packer_bin
mkdir -p ${packer_bin_dir}
export PATH=${packer_bin_dir}:$PATH

export GOPATH=${lite_dir}/gopath
mkdir -p $GOPATH
export PATH=${GOPATH}/bin:$PATH

install_virtualbox
install_packer ${packer_bin_dir}

packer_bosh_provisioner=$(install_packer_bosh)
cat > ${lite_dir}/.packerconfig <<EOF
{
  "provisioners": {
    "packer-bosh": "${packer_bosh_provisioner}"
  }
}
EOF

export PACKER_CONFIG=${lite_dir}/.packerconfig

cd ${lite_dir}

# clear out old boxes so only one gets scp'd back
rm -f *.box

./bin/build-${PROVIDER} "$@"
